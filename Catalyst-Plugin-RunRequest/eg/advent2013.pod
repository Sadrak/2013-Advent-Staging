=head1 TITLE

An Example Catalyst Plugin - Catalyst::Plugin::RunRequest

=head1 OVERVIEW

Port L<Web::Simple>'s feature C<run_test_request> to a L<Catalyst> plugin.

=head1 INTRODUCTION

Generally I tell people there are few good reasons to write a L<Catalyst::Plugin>.
As a unit of reusability, its a pretty heavy hammer, since a plugin become part
of your application and context, that means its available everywhere all the time
and of course it also means that your $c and $app are a little bigger memory wise
and you incur any startup penalties for every single request.  With so many ways
to wrap and reuse functionality (as a Model, ControllerRole or ActionRole, for
example) there's nearly never a good reason to write a Plugin.  And now that
L<Catalyst> is L<PSGI> native, I usually say anything related to the global
request or response is probably better off written as L<Plack::Middleware>.

However, if you are looking for something that is global, and is related to
application functionality, a plugin is still a rational option.  Here's an
example plugin I did that mimics some functionality from another Perl web
framework, L<Web::Simple>

=head1 Web::Simple::Application->run_test_request

L<Web::Simple> has a neat feature that makes it easy to run sample request
in a test case or via the command line.  We'll leave the CLI for now (its a bit
trickier based on the way L<Catalyst> does setup) but as it turn out, mimicing
the underlying function is very easy to do.  It would make a rational plugin and
its also a good opportunity to review some of Catalyst's PSGI guts.

=head2 What other things could you do with this?

I've never loved the way L<Catalyst::Plugin::SubRequest> worked.  It would be
very easy to rewrite or offer another approach using this.  

=head1 Summary

TBD

=head1 For More Information

L<Catalyst>

=head1 Author

John Napiorkowski L<email:jjnapiork@cpan.org>

=cut

